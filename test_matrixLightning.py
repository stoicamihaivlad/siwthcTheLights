import unittest
from matrixLightning import countLightsOn, turnOn, turnOff, toggle, getRowsAndColumns

class TestMatrix(unittest.TestCase):
    def test_countLightsOn(self):
        d = { '999,990': 1, '999,991': 1, '999,992': 0 }
        result = countLightsOn(d)
        self.assertEquals(result, 2)

    def test_turnOn(self):
        d = {
            '999,909': 0, '999,910': 0, '999,911': 0, '999,912': 0, '999,913': 0, '999,914': 0, '999,915': 0, '999,916': 0, '999,917': 0, '999,918': 0, '999,919': 0, '999,920': 0, '999,921': 0, '999,922': 0, '999,923': 0, '999,924': 0, '999,925': 0, '999,926': 0, '999,927': 0, '999,928': 0, '999,929': 0, '999,930': 0, '999,931': 0, '999,932': 0, '999,933': 0, '999,934': 0, '999,935': 0, '999,936': 0, '999,937': 0, '999,938': 0, '999,939': 0, '999,940': 0, '999,941': 0, '999,942': 0, '999,943': 0, '999,944': 0, '999,945': 0, '999,946': 0, '999,947': 0, '999,948': 0, '999,949': 0, '999,950': 0, '999,951': 0, '999,952': 0, '999,953': 0, '999,954': 0
        }
        #where d is a dictionary with length 46
        r1 = 999
        r2 = 999
        c1 = 909
        c2 = 954
        turnOn(d,r1,c1,r2,c2)
        result = countLightsOn(d)
        self.assertEquals(result,46)

    def test_turnOff(self):
        d = {
            '999,909': 0, '999,910': 0, '999,911': 0, '999,912': 0, '999,913': 0, '999,914': 0, '999,915': 0, '999,916': 0, '999,917': 0, '999,918': 0, '999,919': 0, '999,920': 0, '999,921': 0, '999,922': 0, '999,923': 0, '999,924': 0, '999,925': 0, '999,926': 0, '999,927': 0, '999,928': 0, '999,929': 0, '999,930': 0, '999,931': 0, '999,932': 0, '999,933': 0, '999,934': 0, '999,935': 0, '999,936': 0, '999,937': 0, '999,938': 0, '999,939': 0, '999,940': 0, '999,941': 0, '999,942': 0, '999,943': 0, '999,944': 0, '999,945': 0, '999,946': 0, '999,947': 0, '999,948': 0, '999,949': 0, '999,950': 0, '999,951': 0, '999,952': 0, '999,953': 0, '999,954': 0
        }
        #where d is a dictionary with length 46
        r1 = 999
        r2 = 999
        c1 = 909
        c2 = 954
        turnOff(d,r1,c1,r2,c2)
        result = countLightsOn(d)
        self.assertEquals(result,0)

    def test_toggle(self):
        d = {
            '999,909': 0, '999,910': 0, '999,911': 0, '999,912': 0, '999,913': 0, '999,914': 0, '999,915': 0, '999,916': 0, '999,917': 0, '999,918': 0, '999,919': 0, '999,920': 0, '999,921': 0, '999,922': 0, '999,923': 0, '999,924': 0, '999,925': 0, '999,926': 0, '999,927': 0, '999,928': 0, '999,929': 0, '999,930': 0, '999,931': 0, '999,932': 0, '999,933': 0, '999,934': 0, '999,935': 0, '999,936': 0, '999,937': 0, '999,938': 0, '999,939': 0, '999,940': 0, '999,941': 0, '999,942': 0, '999,943': 0, '999,944': 0, '999,945': 0, '999,946': 0, '999,947': 0, '999,948': 0, '999,949': 0, '999,950': 0, '999,951': 0, '999,952': 0, '999,953': 0, '999,954': 0
        }
        r1 = 999
        r2 = 999
        c1 = 909
        c2 = 954
        toggle(d,r1,c1,r2,c2)
        result = countLightsOn(d)
        self.assertEquals(result,46)
    
    def test_getRowsAndColumns(self):
        st = 'turn off 854,899 through 924,987'
        result = getRowsAndColumns(st)
        self.assertEquals(result,[854,899,924,987])

if __name__ == '__main__':
    unittest.main()